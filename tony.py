# Obfuscated with PyObfuscate
# https://www.github.com/htr-tech
# Time : Fri May 26 13:03:29 2023
# -------------------------------
_ = lambda __ : __import__('base64').b64decode(__[::-1]);exec((_)(b'='))